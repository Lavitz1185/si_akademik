// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SIAkademik.Infrastructure.Database;

#nullable disable

namespace SIAkademik.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251001060222_UbahTahunAjaran")]
    partial class UbahTahunAjaran
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SIAkademik.Domain.Authentication.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "ADMIN",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "megalello99@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "Siswa",
                            UserName = "0044710570"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Absen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Absensi")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdRombel")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdSiswa")
                        .HasColumnType("integer");

                    b.Property<string>("Keterangan")
                        .HasColumnType("text");

                    b.Property<int>("PertemuanId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Tanggal")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("PertemuanId");

                    b.HasIndex("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel");

                    b.ToTable("TblAbsen");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.AbsenKelas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Absensi")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdRombel")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdSiswa")
                        .HasColumnType("integer");

                    b.Property<string>("Catatan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("Tanggal")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel");

                    b.ToTable("TblAbsenKelas");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", b =>
                {
                    b.Property<int>("IdSiswa")
                        .HasColumnType("integer");

                    b.Property<int>("IdRombel")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("TanggalKeluar")
                        .HasColumnType("date");

                    b.Property<DateOnly>("TanggalMasuk")
                        .HasColumnType("date");

                    b.HasKey("IdSiswa", "IdRombel");

                    b.HasIndex("IdRombel");

                    b.ToTable("TblAnggotaRombel");

                    b.HasData(
                        new
                        {
                            IdSiswa = 1,
                            IdRombel = 1,
                            TanggalMasuk = new DateOnly(2025, 7, 1)
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Divisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TblDivisi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nama = "SMA"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.HariMengajar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Hari")
                        .HasColumnType("integer");

                    b.Property<int>("JadwalMengajarId")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("JamAkhir")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("JamMulai")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("JadwalMengajarId");

                    b.ToTable("TblHariMengajar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hari = 0,
                            JadwalMengajarId = 1,
                            JamAkhir = new TimeOnly(12, 0, 0),
                            JamMulai = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            Hari = 1,
                            JadwalMengajarId = 1,
                            JamAkhir = new TimeOnly(12, 0, 0),
                            JamMulai = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            Hari = 2,
                            JadwalMengajarId = 1,
                            JamAkhir = new TimeOnly(12, 0, 0),
                            JamMulai = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            Hari = 3,
                            JadwalMengajarId = 1,
                            JamAkhir = new TimeOnly(12, 0, 0),
                            JamMulai = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            Hari = 4,
                            JadwalMengajarId = 1,
                            JamAkhir = new TimeOnly(12, 0, 0),
                            JamMulai = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            Hari = 5,
                            JadwalMengajarId = 1,
                            JamAkhir = new TimeOnly(12, 0, 0),
                            JamMulai = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            Hari = 6,
                            JadwalMengajarId = 1,
                            JamAkhir = new TimeOnly(12, 0, 0),
                            JamMulai = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            Hari = 0,
                            JadwalMengajarId = 2,
                            JamAkhir = new TimeOnly(16, 0, 0),
                            JamMulai = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            Hari = 1,
                            JadwalMengajarId = 2,
                            JamAkhir = new TimeOnly(16, 0, 0),
                            JamMulai = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Id = 10,
                            Hari = 2,
                            JadwalMengajarId = 2,
                            JamAkhir = new TimeOnly(16, 0, 0),
                            JamMulai = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Id = 11,
                            Hari = 3,
                            JadwalMengajarId = 2,
                            JamAkhir = new TimeOnly(16, 0, 0),
                            JamMulai = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Id = 12,
                            Hari = 4,
                            JadwalMengajarId = 2,
                            JamAkhir = new TimeOnly(16, 0, 0),
                            JamMulai = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Id = 13,
                            Hari = 5,
                            JadwalMengajarId = 2,
                            JamAkhir = new TimeOnly(16, 0, 0),
                            JamMulai = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Id = 14,
                            Hari = 6,
                            JadwalMengajarId = 2,
                            JamAkhir = new TimeOnly(16, 0, 0),
                            JamMulai = new TimeOnly(13, 0, 0)
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Jabatan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Jenis")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TblJabatan");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Jenis = 0,
                            Nama = "Guru Matematika"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MataPelajaranId")
                        .HasColumnType("integer");

                    b.Property<string>("PegawaiId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RombelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PegawaiId");

                    b.HasIndex("RombelId");

                    b.HasIndex("MataPelajaranId", "RombelId", "PegawaiId")
                        .IsUnique();

                    b.ToTable("TblJadwalMengajar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MataPelajaranId = 1,
                            PegawaiId = "PJ24-003",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 2,
                            MataPelajaranId = 2,
                            PegawaiId = "PJ24-003",
                            RombelId = 1
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Kelas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Jenjang")
                        .HasColumnType("integer");

                    b.Property<int>("PeminatanId")
                        .HasColumnType("integer");

                    b.Property<int>("TahunAjaranId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PeminatanId");

                    b.HasIndex("TahunAjaranId");

                    b.ToTable("TblKelas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Jenjang = 0,
                            PeminatanId = 1,
                            TahunAjaranId = 2
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.MataPelajaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Jenjang")
                        .HasColumnType("integer");

                    b.Property<double>("KKM")
                        .HasColumnType("double precision");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PeminatanId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PeminatanId");

                    b.ToTable("TblMataPelajaran");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Jenjang = 0,
                            KKM = 70.0,
                            Nama = "Matematika",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 2,
                            Jenjang = 0,
                            KKM = 80.0,
                            Nama = "Bahasa Indonesia",
                            PeminatanId = 1
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Nilai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnggotaRombelIdRombel")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdSiswa")
                        .HasColumnType("integer");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JadwalMengajarId")
                        .HasColumnType("integer");

                    b.Property<int>("Jenis")
                        .HasColumnType("integer");

                    b.Property<double>("Skor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("JadwalMengajarId");

                    b.HasIndex("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel");

                    b.ToTable("TblNilai");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Agama")
                        .HasColumnType("integer");

                    b.Property<int?>("AppUserId")
                        .HasColumnType("integer");

                    b.Property<int>("DivisiId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GolonganDarah")
                        .HasColumnType("integer");

                    b.Property<int>("JabatanId")
                        .HasColumnType("integer");

                    b.Property<int>("JenisKelamin")
                        .HasColumnType("integer");

                    b.Property<string>("NIK")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaInstagram")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NoHP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NoRekening")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusPerkawinan")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("TanggalLahir")
                        .HasColumnType("date");

                    b.Property<DateOnly>("TanggalMasuk")
                        .HasColumnType("date");

                    b.Property<string>("TempatLahir")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ComplexProperty<Dictionary<string, object>>("AlamatKTP", "SIAkademik.Domain.ModulSiakad.Entities.Pegawai.AlamatKTP#Alamat", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Jalan")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Kecamatan")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KelurahanDesa")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KodePos")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KotaKabupaten")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Provinsi")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("RT")
                                .HasColumnType("integer");

                            b1.Property<int>("RW")
                                .HasColumnType("integer");
                        });

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.HasIndex("DivisiId");

                    b.HasIndex("JabatanId");

                    b.ToTable("TblPegawai");

                    b.HasData(
                        new
                        {
                            Id = "PJ24-003",
                            Agama = 0,
                            AppUserId = 2,
                            DivisiId = 1,
                            Email = "megalello99@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 1,
                            JenisKelamin = 1,
                            NIK = "5301086707010008",
                            Nama = "Mega Lita A. Lello, S.Pd",
                            NamaInstagram = "",
                            NoHP = "081237731427",
                            NoRekening = "169601013554503(BRI)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(2001, 7, 27),
                            TanggalMasuk = new DateOnly(2024, 7, 1),
                            TempatLahir = "Noelbaki"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Peminatan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Jenis")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TblPeminatan");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Jenis = 0,
                            Nama = "Umum"
                        },
                        new
                        {
                            Id = 2,
                            Jenis = 1,
                            Nama = "MIPA"
                        },
                        new
                        {
                            Id = 3,
                            Jenis = 1,
                            Nama = "IPS"
                        },
                        new
                        {
                            Id = 4,
                            Jenis = 1,
                            Nama = "Bahasa"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pertemuan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("JadwalMengajarId")
                        .HasColumnType("integer");

                    b.Property<string>("Keterangan")
                        .HasColumnType("text");

                    b.Property<int>("Nomor")
                        .HasColumnType("integer");

                    b.Property<int>("StatusPertemuan")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TanggalPelaksanaan")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("JadwalMengajarId");

                    b.ToTable("TblPertemuan");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            JadwalMengajarId = 1,
                            Nomor = 1,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 2,
                            JadwalMengajarId = 1,
                            Nomor = 2,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 3,
                            JadwalMengajarId = 1,
                            Nomor = 3,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 4,
                            JadwalMengajarId = 1,
                            Nomor = 4,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 5,
                            JadwalMengajarId = 1,
                            Nomor = 5,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 6,
                            JadwalMengajarId = 1,
                            Nomor = 6,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 7,
                            JadwalMengajarId = 1,
                            Nomor = 7,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 8,
                            JadwalMengajarId = 1,
                            Nomor = 8,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 9,
                            JadwalMengajarId = 1,
                            Nomor = 9,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 10,
                            JadwalMengajarId = 1,
                            Nomor = 10,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 11,
                            JadwalMengajarId = 2,
                            Nomor = 1,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 12,
                            JadwalMengajarId = 2,
                            Nomor = 2,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 13,
                            JadwalMengajarId = 2,
                            Nomor = 3,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 14,
                            JadwalMengajarId = 2,
                            Nomor = 4,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 15,
                            JadwalMengajarId = 2,
                            Nomor = 5,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 16,
                            JadwalMengajarId = 2,
                            Nomor = 6,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 17,
                            JadwalMengajarId = 2,
                            Nomor = 7,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 18,
                            JadwalMengajarId = 2,
                            Nomor = 8,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 19,
                            JadwalMengajarId = 2,
                            Nomor = 9,
                            StatusPertemuan = 0
                        },
                        new
                        {
                            Id = 20,
                            JadwalMengajarId = 2,
                            Nomor = 10,
                            StatusPertemuan = 0
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Raport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnggotaRombelIdRombel")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdSiswa")
                        .HasColumnType("integer");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("JadwalMengajarId")
                        .HasColumnType("integer");

                    b.Property<int>("KategoriNilai")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Predikat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("JadwalMengajarId");

                    b.HasIndex("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel");

                    b.ToTable("TblRaport");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Rombel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("KelasId")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WaliId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KelasId");

                    b.HasIndex("WaliId");

                    b.ToTable("TblRombel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KelasId = 1,
                            Nama = "A",
                            WaliId = "PJ24-003"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Siswa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Agama")
                        .HasColumnType("integer");

                    b.Property<string>("AgamaAyah")
                        .HasColumnType("text");

                    b.Property<string>("AgamaIbu")
                        .HasColumnType("text");

                    b.Property<string>("AgamaWali")
                        .HasColumnType("text");

                    b.Property<string>("AktaKelahiran")
                        .HasColumnType("text");

                    b.Property<int?>("AnakKe")
                        .HasColumnType("integer");

                    b.Property<int>("AppUserId")
                        .HasColumnType("integer");

                    b.Property<string>("AsalSekolah")
                        .HasColumnType("text");

                    b.Property<double?>("BeratBadan")
                        .HasColumnType("double precision");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("GolonganDarah")
                        .HasColumnType("integer");

                    b.Property<string>("Hobi")
                        .HasColumnType("text");

                    b.Property<string>("HubunganDenganWali")
                        .HasColumnType("text");

                    b.Property<int>("JenisKelamin")
                        .HasColumnType("integer");

                    b.Property<int?>("JumlahSaudara")
                        .HasColumnType("integer");

                    b.Property<string>("NIKAyah")
                        .HasColumnType("text");

                    b.Property<string>("NIKIbu")
                        .HasColumnType("text");

                    b.Property<string>("NIKWali")
                        .HasColumnType("text");

                    b.Property<string>("NIS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NISN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaAyah")
                        .HasColumnType("text");

                    b.Property<string>("NamaIbu")
                        .HasColumnType("text");

                    b.Property<string>("NamaWali")
                        .HasColumnType("text");

                    b.Property<string>("NoHP")
                        .HasColumnType("text");

                    b.Property<string>("NoHPAyah")
                        .HasColumnType("text");

                    b.Property<string>("NoHPIbu")
                        .HasColumnType("text");

                    b.Property<string>("NoHPWali")
                        .HasColumnType("text");

                    b.Property<string>("NomorKartuKeluarga")
                        .HasColumnType("text");

                    b.Property<string>("NomorKartuPelajar")
                        .HasColumnType("text");

                    b.Property<string>("PekerjaanAyah")
                        .HasColumnType("text");

                    b.Property<string>("PekerjaanIbu")
                        .HasColumnType("text");

                    b.Property<string>("PekerjaanWali")
                        .HasColumnType("text");

                    b.Property<int?>("PeminatanId")
                        .HasColumnType("integer");

                    b.Property<string>("PendidikanTerakhirAyah")
                        .HasColumnType("text");

                    b.Property<string>("PendidikanTerakhirIbu")
                        .HasColumnType("text");

                    b.Property<string>("PendidikanTerakhirWali")
                        .HasColumnType("text");

                    b.Property<int>("StatusAktif")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusHidupAyah")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusHidupIbu")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusHidupWali")
                        .HasColumnType("integer");

                    b.Property<string>("Suku")
                        .HasColumnType("text");

                    b.Property<DateOnly>("TanggalLahir")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("TanggalLahirAyah")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("TanggalLahirIbu")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("TanggalLahirWali")
                        .HasColumnType("date");

                    b.Property<DateOnly>("TanggalMasuk")
                        .HasColumnType("date");

                    b.Property<string>("TempatLahir")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("TinggiBadan")
                        .HasColumnType("double precision");

                    b.ComplexProperty<Dictionary<string, object>>("AlamatLengkap", "SIAkademik.Domain.ModulSiakad.Entities.Siswa.AlamatLengkap#Alamat", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Jalan")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Kecamatan")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KelurahanDesa")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KodePos")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KotaKabupaten")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Provinsi")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("RT")
                                .HasColumnType("integer");

                            b1.Property<int>("RW")
                                .HasColumnType("integer");
                        });

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.HasIndex("PeminatanId");

                    b.ToTable("TblSiswa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Agama = 1,
                            AppUserId = 3,
                            JenisKelamin = 0,
                            NIS = "123456",
                            NISN = "0044710570",
                            Nama = "OSWALDUS PUTRA FERNANDO",
                            StatusAktif = 0,
                            TanggalLahir = new DateOnly(2004, 10, 14),
                            TanggalMasuk = new DateOnly(2025, 1, 1),
                            TempatLahir = "Makassar"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.TahunAjaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Semester")
                        .HasColumnType("integer");

                    b.Property<int>("Tahun")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("TanggalMulai")
                        .HasColumnType("date");

                    b.Property<DateOnly>("TanggalSelesai")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("TblTahunAjaran");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Semester = 1,
                            Tahun = 2024,
                            TanggalMulai = new DateOnly(2025, 1, 1),
                            TanggalSelesai = new DateOnly(2025, 7, 31)
                        },
                        new
                        {
                            Id = 2,
                            Semester = 0,
                            Tahun = 2025,
                            TanggalMulai = new DateOnly(2025, 8, 1),
                            TanggalSelesai = new DateOnly(2025, 12, 31)
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Absen", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Pertemuan", "Pertemuan")
                        .WithMany("DaftarAbsen")
                        .HasForeignKey("PertemuanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", "AnggotaRombel")
                        .WithMany("DaftarAbsen")
                        .HasForeignKey("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnggotaRombel");

                    b.Navigation("Pertemuan");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.AbsenKelas", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", "AnggotaRombel")
                        .WithMany("DaftarAbsenKelas")
                        .HasForeignKey("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnggotaRombel");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Rombel", "Rombel")
                        .WithMany("DaftarAnggotaRombel")
                        .HasForeignKey("IdRombel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Siswa", "Siswa")
                        .WithMany("DaftarAnggotaRombel")
                        .HasForeignKey("IdSiswa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rombel");

                    b.Navigation("Siswa");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.HariMengajar", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", "JadwalMengajar")
                        .WithMany("DaftarHariMengajar")
                        .HasForeignKey("JadwalMengajarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.MataPelajaran", "MataPelajaran")
                        .WithMany("DaftarJadwalMengajar")
                        .HasForeignKey("MataPelajaranId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", "Pegawai")
                        .WithMany("DaftarJadwalMengajar")
                        .HasForeignKey("PegawaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Rombel", "Rombel")
                        .WithMany("DaftarJadwalMengajar")
                        .HasForeignKey("RombelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MataPelajaran");

                    b.Navigation("Pegawai");

                    b.Navigation("Rombel");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Kelas", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Peminatan", "Peminatan")
                        .WithMany("DaftarKelas")
                        .HasForeignKey("PeminatanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.TahunAjaran", "TahunAjaran")
                        .WithMany("DaftarKelas")
                        .HasForeignKey("TahunAjaranId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peminatan");

                    b.Navigation("TahunAjaran");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.MataPelajaran", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Peminatan", "Peminatan")
                        .WithMany("DaftarMataPelajaran")
                        .HasForeignKey("PeminatanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peminatan");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Nilai", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", "JadwalMengajar")
                        .WithMany("DaftarNilai")
                        .HasForeignKey("JadwalMengajarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", "AnggotaRombel")
                        .WithMany("DaftarNilai")
                        .HasForeignKey("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnggotaRombel");

                    b.Navigation("JadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", b =>
                {
                    b.HasOne("SIAkademik.Domain.Authentication.AppUser", "Account")
                        .WithOne("Guru")
                        .HasForeignKey("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", "AppUserId");

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Divisi", "Divisi")
                        .WithMany("DaftarPegawai")
                        .HasForeignKey("DivisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Jabatan", "Jabatan")
                        .WithMany("DaftarPegawai")
                        .HasForeignKey("JabatanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Divisi");

                    b.Navigation("Jabatan");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pertemuan", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", "JadwalMengajar")
                        .WithMany("DaftarPertemuan")
                        .HasForeignKey("JadwalMengajarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Raport", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", "JadwalMengajar")
                        .WithMany("DaftarRaport")
                        .HasForeignKey("JadwalMengajarId");

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", "AnggotaRombel")
                        .WithMany("DaftarRaport")
                        .HasForeignKey("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnggotaRombel");

                    b.Navigation("JadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Rombel", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Kelas", "Kelas")
                        .WithMany("DaftarRombel")
                        .HasForeignKey("KelasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", "Wali")
                        .WithMany("DaftarRombelWali")
                        .HasForeignKey("WaliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kelas");

                    b.Navigation("Wali");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Siswa", b =>
                {
                    b.HasOne("SIAkademik.Domain.Authentication.AppUser", "Account")
                        .WithOne("Siswa")
                        .HasForeignKey("SIAkademik.Domain.ModulSiakad.Entities.Siswa", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Peminatan", "Peminatan")
                        .WithMany()
                        .HasForeignKey("PeminatanId");

                    b.Navigation("Account");

                    b.Navigation("Peminatan");
                });

            modelBuilder.Entity("SIAkademik.Domain.Authentication.AppUser", b =>
                {
                    b.Navigation("Guru");

                    b.Navigation("Siswa");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", b =>
                {
                    b.Navigation("DaftarAbsen");

                    b.Navigation("DaftarAbsenKelas");

                    b.Navigation("DaftarNilai");

                    b.Navigation("DaftarRaport");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Divisi", b =>
                {
                    b.Navigation("DaftarPegawai");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Jabatan", b =>
                {
                    b.Navigation("DaftarPegawai");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", b =>
                {
                    b.Navigation("DaftarHariMengajar");

                    b.Navigation("DaftarNilai");

                    b.Navigation("DaftarPertemuan");

                    b.Navigation("DaftarRaport");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Kelas", b =>
                {
                    b.Navigation("DaftarRombel");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.MataPelajaran", b =>
                {
                    b.Navigation("DaftarJadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", b =>
                {
                    b.Navigation("DaftarJadwalMengajar");

                    b.Navigation("DaftarRombelWali");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Peminatan", b =>
                {
                    b.Navigation("DaftarKelas");

                    b.Navigation("DaftarMataPelajaran");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pertemuan", b =>
                {
                    b.Navigation("DaftarAbsen");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Rombel", b =>
                {
                    b.Navigation("DaftarAnggotaRombel");

                    b.Navigation("DaftarJadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Siswa", b =>
                {
                    b.Navigation("DaftarAnggotaRombel");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.TahunAjaran", b =>
                {
                    b.Navigation("DaftarKelas");
                });
#pragma warning restore 612, 618
        }
    }
}
