// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SIAkademik.Infrastructure.Database;

#nullable disable

namespace SIAkademik.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251005062039_AgamaIbuAyahWaliJadiEnum")]
    partial class AgamaIbuAyahWaliJadiEnum
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SIAkademik.Domain.Authentication.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "ADMIN",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "megalello99@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "johanis@pandhegajaya.sch.id"
                        },
                        new
                        {
                            Id = 5,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "jeheskia@pandhegajaya.sch.id"
                        },
                        new
                        {
                            Id = 6,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "umbujonas22@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "nerlanemu@pandhegajaya.sch.id"
                        },
                        new
                        {
                            Id = 8,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "yefrykuafeu@gmail.com"
                        },
                        new
                        {
                            Id = 9,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "landoseran99@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "ellapandie@gmail.com"
                        },
                        new
                        {
                            Id = 11,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "lindajanitaa@gmail.com"
                        },
                        new
                        {
                            Id = 12,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "sofiablegur14@gmail.com"
                        },
                        new
                        {
                            Id = 13,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "putrolas@gmail.com"
                        },
                        new
                        {
                            Id = 14,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "tupuyane@gmail.com"
                        },
                        new
                        {
                            Id = 15,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "Siswa",
                            UserName = "0047892929"
                        },
                        new
                        {
                            Id = 16,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "sam.meha@pandhegajaya.sch.id"
                        },
                        new
                        {
                            Id = 17,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "yunias@pandhegajaya.sch.id"
                        },
                        new
                        {
                            Id = 18,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "GURU",
                            UserName = "dussebotahala02@gmail.com"
                        },
                        new
                        {
                            Id = 19,
                            PasswordHash = "AQAAAAIAAYagAAAAEKXsR8woVHO5DgmyBgmfe5b4I7jeJZYtk71JFY4HkDSCsimeHtIwzOueTyHo8gBH/A==",
                            Role = "Siswa",
                            UserName = "252601"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Absen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Absensi")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdRombel")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdSiswa")
                        .HasColumnType("integer");

                    b.Property<string>("Keterangan")
                        .HasColumnType("text");

                    b.Property<int>("PertemuanId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Tanggal")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("PertemuanId");

                    b.HasIndex("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel");

                    b.ToTable("TblAbsen");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.AbsenKelas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Absensi")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdRombel")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdSiswa")
                        .HasColumnType("integer");

                    b.Property<string>("Catatan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("Tanggal")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel");

                    b.ToTable("TblAbsenKelas");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", b =>
                {
                    b.Property<int>("IdSiswa")
                        .HasColumnType("integer");

                    b.Property<int>("IdRombel")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("TanggalKeluar")
                        .HasColumnType("date");

                    b.Property<DateOnly>("TanggalMasuk")
                        .HasColumnType("date");

                    b.HasKey("IdSiswa", "IdRombel");

                    b.HasIndex("IdRombel");

                    b.ToTable("TblAnggotaRombel");

                    b.HasData(
                        new
                        {
                            IdSiswa = 2,
                            IdRombel = 2,
                            TanggalMasuk = new DateOnly(2021, 8, 1)
                        },
                        new
                        {
                            IdSiswa = 3,
                            IdRombel = 1,
                            TanggalMasuk = new DateOnly(2025, 8, 1)
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Divisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TblDivisi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nama = "SMA"
                        },
                        new
                        {
                            Id = 2,
                            Nama = "Pengadaan dan Keuangan"
                        },
                        new
                        {
                            Id = 3,
                            Nama = "DPU"
                        },
                        new
                        {
                            Id = 4,
                            Nama = "HRD"
                        },
                        new
                        {
                            Id = 5,
                            Nama = "R&D"
                        },
                        new
                        {
                            Id = 6,
                            Nama = "Yayasan"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.HariMengajar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Hari")
                        .HasColumnType("integer");

                    b.Property<int>("JadwalMengajarId")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("JamAkhir")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("JamMulai")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("JadwalMengajarId");

                    b.ToTable("TblHariMengajar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hari = 0,
                            JadwalMengajarId = 17,
                            JamAkhir = new TimeOnly(8, 15, 0),
                            JamMulai = new TimeOnly(7, 30, 0)
                        },
                        new
                        {
                            Id = 2,
                            Hari = 0,
                            JadwalMengajarId = 17,
                            JamAkhir = new TimeOnly(9, 5, 0),
                            JamMulai = new TimeOnly(8, 20, 0)
                        },
                        new
                        {
                            Id = 3,
                            Hari = 0,
                            JadwalMengajarId = 18,
                            JamAkhir = new TimeOnly(9, 55, 0),
                            JamMulai = new TimeOnly(9, 10, 0)
                        },
                        new
                        {
                            Id = 4,
                            Hari = 0,
                            JadwalMengajarId = 18,
                            JamAkhir = new TimeOnly(10, 45, 0),
                            JamMulai = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            Hari = 0,
                            JadwalMengajarId = 19,
                            JamAkhir = new TimeOnly(11, 35, 0),
                            JamMulai = new TimeOnly(10, 50, 0)
                        },
                        new
                        {
                            Id = 6,
                            Hari = 0,
                            JadwalMengajarId = 19,
                            JamAkhir = new TimeOnly(12, 25, 0),
                            JamMulai = new TimeOnly(11, 40, 0)
                        },
                        new
                        {
                            Id = 7,
                            Hari = 1,
                            JadwalMengajarId = 20,
                            JamAkhir = new TimeOnly(9, 55, 0),
                            JamMulai = new TimeOnly(9, 10, 0)
                        },
                        new
                        {
                            Id = 8,
                            Hari = 1,
                            JadwalMengajarId = 20,
                            JamAkhir = new TimeOnly(10, 45, 0),
                            JamMulai = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            Hari = 1,
                            JadwalMengajarId = 21,
                            JamAkhir = new TimeOnly(11, 35, 0),
                            JamMulai = new TimeOnly(10, 50, 0)
                        },
                        new
                        {
                            Id = 10,
                            Hari = 1,
                            JadwalMengajarId = 21,
                            JamAkhir = new TimeOnly(12, 25, 0),
                            JamMulai = new TimeOnly(11, 40, 0)
                        },
                        new
                        {
                            Id = 11,
                            Hari = 2,
                            JadwalMengajarId = 22,
                            JamAkhir = new TimeOnly(8, 15, 0),
                            JamMulai = new TimeOnly(7, 30, 0)
                        },
                        new
                        {
                            Id = 12,
                            Hari = 2,
                            JadwalMengajarId = 22,
                            JamAkhir = new TimeOnly(9, 5, 0),
                            JamMulai = new TimeOnly(8, 20, 0)
                        },
                        new
                        {
                            Id = 13,
                            Hari = 2,
                            JadwalMengajarId = 22,
                            JamAkhir = new TimeOnly(9, 55, 0),
                            JamMulai = new TimeOnly(9, 10, 0)
                        },
                        new
                        {
                            Id = 14,
                            Hari = 2,
                            JadwalMengajarId = 23,
                            JamAkhir = new TimeOnly(10, 45, 0),
                            JamMulai = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Id = 15,
                            Hari = 2,
                            JadwalMengajarId = 23,
                            JamAkhir = new TimeOnly(11, 35, 0),
                            JamMulai = new TimeOnly(10, 50, 0)
                        },
                        new
                        {
                            Id = 16,
                            Hari = 2,
                            JadwalMengajarId = 23,
                            JamAkhir = new TimeOnly(12, 25, 0),
                            JamMulai = new TimeOnly(11, 45, 0)
                        },
                        new
                        {
                            Id = 17,
                            Hari = 2,
                            JadwalMengajarId = 24,
                            JamAkhir = new TimeOnly(13, 45, 0),
                            JamMulai = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Id = 18,
                            Hari = 2,
                            JadwalMengajarId = 24,
                            JamAkhir = new TimeOnly(14, 35, 0),
                            JamMulai = new TimeOnly(13, 50, 0)
                        },
                        new
                        {
                            Id = 19,
                            Hari = 3,
                            JadwalMengajarId = 25,
                            JamAkhir = new TimeOnly(8, 15, 0),
                            JamMulai = new TimeOnly(7, 30, 0)
                        },
                        new
                        {
                            Id = 20,
                            Hari = 3,
                            JadwalMengajarId = 25,
                            JamAkhir = new TimeOnly(9, 5, 0),
                            JamMulai = new TimeOnly(8, 20, 0)
                        },
                        new
                        {
                            Id = 21,
                            Hari = 3,
                            JadwalMengajarId = 26,
                            JamAkhir = new TimeOnly(9, 55, 0),
                            JamMulai = new TimeOnly(9, 10, 0)
                        },
                        new
                        {
                            Id = 22,
                            Hari = 3,
                            JadwalMengajarId = 26,
                            JamAkhir = new TimeOnly(10, 45, 0),
                            JamMulai = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Id = 23,
                            Hari = 4,
                            JadwalMengajarId = 27,
                            JamAkhir = new TimeOnly(8, 15, 0),
                            JamMulai = new TimeOnly(7, 30, 0)
                        },
                        new
                        {
                            Id = 24,
                            Hari = 4,
                            JadwalMengajarId = 27,
                            JamAkhir = new TimeOnly(9, 5, 0),
                            JamMulai = new TimeOnly(8, 20, 0)
                        },
                        new
                        {
                            Id = 25,
                            Hari = 1,
                            JadwalMengajarId = 28,
                            JamAkhir = new TimeOnly(21, 0, 0),
                            JamMulai = new TimeOnly(20, 0, 0)
                        },
                        new
                        {
                            Id = 26,
                            Hari = 4,
                            JadwalMengajarId = 29,
                            JamAkhir = new TimeOnly(10, 45, 0),
                            JamMulai = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Id = 27,
                            Hari = 4,
                            JadwalMengajarId = 29,
                            JamAkhir = new TimeOnly(11, 35, 0),
                            JamMulai = new TimeOnly(10, 50, 0)
                        },
                        new
                        {
                            Id = 28,
                            Hari = 3,
                            JadwalMengajarId = 30,
                            JamAkhir = new TimeOnly(11, 35, 0),
                            JamMulai = new TimeOnly(10, 50, 0)
                        },
                        new
                        {
                            Id = 29,
                            Hari = 3,
                            JadwalMengajarId = 30,
                            JamAkhir = new TimeOnly(12, 25, 0),
                            JamMulai = new TimeOnly(11, 40, 0)
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Jabatan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Jenis")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TblJabatan");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Jenis = 0,
                            Nama = "Guru Matematika"
                        },
                        new
                        {
                            Id = 2,
                            Jenis = 0,
                            Nama = "Kepala Sekolah"
                        },
                        new
                        {
                            Id = 3,
                            Jenis = 0,
                            Nama = "Wakil Kepala Bidang Kesiswaan"
                        },
                        new
                        {
                            Id = 4,
                            Jenis = 1,
                            Nama = "Kepala Asrama"
                        },
                        new
                        {
                            Id = 5,
                            Jenis = 0,
                            Nama = "Guru Honor Olahraga"
                        },
                        new
                        {
                            Id = 6,
                            Jenis = 0,
                            Nama = "Wakil Kepala Bidang Kurikulum"
                        },
                        new
                        {
                            Id = 7,
                            Jenis = 0,
                            Nama = "Pembina OSIS"
                        },
                        new
                        {
                            Id = 8,
                            Jenis = 0,
                            Nama = "Guru Honor Geografi"
                        },
                        new
                        {
                            Id = 9,
                            Jenis = 1,
                            Nama = "Karyawan Pengadaan dan Keuangan"
                        },
                        new
                        {
                            Id = 10,
                            Jenis = 0,
                            Nama = "Guru Honor Fisika"
                        },
                        new
                        {
                            Id = 11,
                            Jenis = 0,
                            Nama = "Guru Honor Bahasa Indonesia"
                        },
                        new
                        {
                            Id = 12,
                            Jenis = 0,
                            Nama = "Guru English Center"
                        },
                        new
                        {
                            Id = 13,
                            Jenis = 0,
                            Nama = "Guru PPKN"
                        },
                        new
                        {
                            Id = 14,
                            Jenis = 0,
                            Nama = "Guru Biologi"
                        },
                        new
                        {
                            Id = 15,
                            Jenis = 0,
                            Nama = "Kordinator Pengadaan dan Keuangan"
                        },
                        new
                        {
                            Id = 16,
                            Jenis = 0,
                            Nama = "Direktor Sekolah"
                        },
                        new
                        {
                            Id = 17,
                            Jenis = 0,
                            Nama = "Guru Honor"
                        },
                        new
                        {
                            Id = 18,
                            Jenis = 0,
                            Nama = "Guru Honor Ekonomi"
                        },
                        new
                        {
                            Id = 19,
                            Jenis = 0,
                            Nama = "Guru Honor Matematika"
                        },
                        new
                        {
                            Id = 20,
                            Jenis = 0,
                            Nama = "Kordinator Operasional dan Kor DPU"
                        },
                        new
                        {
                            Id = 21,
                            Jenis = 0,
                            Nama = "Kordinator Sekolah"
                        },
                        new
                        {
                            Id = 22,
                            Jenis = 1,
                            Nama = "Karyawan SPV DPU"
                        },
                        new
                        {
                            Id = 23,
                            Jenis = 1,
                            Nama = "Karyawan Pengadaan dan Keuangan"
                        },
                        new
                        {
                            Id = 24,
                            Jenis = 1,
                            Nama = "Karyawan DPU"
                        },
                        new
                        {
                            Id = 25,
                            Jenis = 1,
                            Nama = "Kordinator HRD"
                        },
                        new
                        {
                            Id = 26,
                            Jenis = 1,
                            Nama = "Kordinator R&D"
                        },
                        new
                        {
                            Id = 27,
                            Jenis = 1,
                            Nama = "Karyawan Dapur"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MataPelajaranId")
                        .HasColumnType("integer");

                    b.Property<string>("PegawaiId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RombelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PegawaiId");

                    b.HasIndex("RombelId");

                    b.HasIndex("MataPelajaranId", "RombelId", "PegawaiId")
                        .IsUnique();

                    b.ToTable("TblJadwalMengajar");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            MataPelajaranId = 3,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 4,
                            MataPelajaranId = 4,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 5,
                            MataPelajaranId = 5,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 6,
                            MataPelajaranId = 6,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 7,
                            MataPelajaranId = 7,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 8,
                            MataPelajaranId = 8,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 9,
                            MataPelajaranId = 9,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 10,
                            MataPelajaranId = 10,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 11,
                            MataPelajaranId = 11,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 12,
                            MataPelajaranId = 12,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 13,
                            MataPelajaranId = 13,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 14,
                            MataPelajaranId = 14,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 15,
                            MataPelajaranId = 15,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 16,
                            MataPelajaranId = 16,
                            PegawaiId = "PJ17-010",
                            RombelId = 2
                        },
                        new
                        {
                            Id = 17,
                            MataPelajaranId = 17,
                            PegawaiId = "PJ14-003",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 18,
                            MataPelajaranId = 18,
                            PegawaiId = "PJ24-004",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 19,
                            MataPelajaranId = 19,
                            PegawaiId = "PJ18-012",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 20,
                            MataPelajaranId = 21,
                            PegawaiId = "PJ19-017",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 21,
                            MataPelajaranId = 22,
                            PegawaiId = "PJ14-005",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 22,
                            MataPelajaranId = 23,
                            PegawaiId = "PJ18-013",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 23,
                            MataPelajaranId = 24,
                            PegawaiId = "PJ19-016",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 24,
                            MataPelajaranId = 25,
                            PegawaiId = "PJ23-029",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 25,
                            MataPelajaranId = 26,
                            PegawaiId = "PJ19-017",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 26,
                            MataPelajaranId = 27,
                            PegawaiId = "PJ23-030",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 27,
                            MataPelajaranId = 28,
                            PegawaiId = "PJ23-031",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 28,
                            MataPelajaranId = 29,
                            PegawaiId = "PJ23-030",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 29,
                            MataPelajaranId = 30,
                            PegawaiId = "PJ24-005",
                            RombelId = 1
                        },
                        new
                        {
                            Id = 30,
                            MataPelajaranId = 31,
                            PegawaiId = "PJ23-030",
                            RombelId = 1
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Kelas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Jenjang")
                        .HasColumnType("integer");

                    b.Property<int>("PeminatanId")
                        .HasColumnType("integer");

                    b.Property<int>("TahunAjaranId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PeminatanId");

                    b.HasIndex("TahunAjaranId");

                    b.ToTable("TblKelas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Jenjang = 0,
                            PeminatanId = 1,
                            TahunAjaranId = 2
                        },
                        new
                        {
                            Id = 2,
                            Jenjang = 2,
                            PeminatanId = 5,
                            TahunAjaranId = 3
                        },
                        new
                        {
                            Id = 3,
                            Jenjang = 1,
                            PeminatanId = 1,
                            TahunAjaranId = 2
                        },
                        new
                        {
                            Id = 4,
                            Jenjang = 2,
                            PeminatanId = 1,
                            TahunAjaranId = 2
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.MataPelajaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Jenjang")
                        .HasColumnType("integer");

                    b.Property<double>("KKM")
                        .HasColumnType("double precision");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PeminatanId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PeminatanId");

                    b.ToTable("TblMataPelajaran");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Pendidikan Agama dan Budi Pekerti",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 4,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Pendidikan Pancasila dan Kewarganegaraan",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 5,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Bahasa Indonesia",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 6,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Matematika",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 7,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Sejarah Indonesia",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 8,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Bahasa Inggris",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 9,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Seni Budaya",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 10,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Pendidikan Jasmani Olah Raga Kesehatan",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 11,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Matematika",
                            PeminatanId = 5
                        },
                        new
                        {
                            Id = 12,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Fisika",
                            PeminatanId = 5
                        },
                        new
                        {
                            Id = 13,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Biologi",
                            PeminatanId = 5
                        },
                        new
                        {
                            Id = 14,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Kimia",
                            PeminatanId = 5
                        },
                        new
                        {
                            Id = 15,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Pendalaman Minat Matematika",
                            PeminatanId = 5
                        },
                        new
                        {
                            Id = 16,
                            Jenjang = 2,
                            KKM = 75.0,
                            Nama = "Pendalaman Minat Bahasa Inggris",
                            PeminatanId = 5
                        },
                        new
                        {
                            Id = 17,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Kimia",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 18,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Pendidikan Pancasila",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 19,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Biologi",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 20,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Coding",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 21,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Sejarah",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 22,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Sosiologi",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 23,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Pendidikan Jasmani, Olah Raga dan Kesehatan",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 24,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Bahasa Inggris",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 25,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Ekonomi",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 26,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Geografi",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 27,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Fisika",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 28,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Bahasa Indonesia",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 29,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Pendidikan Agama dan Budi Pekerti",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 30,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Matematika (Umum)",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 31,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Seni Budaya",
                            PeminatanId = 1
                        },
                        new
                        {
                            Id = 32,
                            Jenjang = 0,
                            KKM = 75.0,
                            Nama = "Prakarya dan Kewirausahaan",
                            PeminatanId = 1
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Nilai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnggotaRombelIdRombel")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdSiswa")
                        .HasColumnType("integer");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JadwalMengajarId")
                        .HasColumnType("integer");

                    b.Property<int>("Jenis")
                        .HasColumnType("integer");

                    b.Property<double>("Skor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("JadwalMengajarId");

                    b.HasIndex("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel");

                    b.ToTable("TblNilai");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Agama")
                        .HasColumnType("integer");

                    b.Property<int?>("AppUserId")
                        .HasColumnType("integer");

                    b.Property<int>("DivisiId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GolonganDarah")
                        .HasColumnType("integer");

                    b.Property<int>("JabatanId")
                        .HasColumnType("integer");

                    b.Property<int>("JenisKelamin")
                        .HasColumnType("integer");

                    b.Property<string>("NIK")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaInstagram")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NoHP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NoRekening")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusPerkawinan")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("TanggalLahir")
                        .HasColumnType("date");

                    b.Property<DateOnly>("TanggalMasuk")
                        .HasColumnType("date");

                    b.Property<string>("TempatLahir")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ComplexProperty<Dictionary<string, object>>("AlamatKTP", "SIAkademik.Domain.ModulSiakad.Entities.Pegawai.AlamatKTP#Alamat", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Jalan")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Kecamatan")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KelurahanDesa")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KodePos")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KotaKabupaten")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Provinsi")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("RT")
                                .HasColumnType("integer");

                            b1.Property<int>("RW")
                                .HasColumnType("integer");
                        });

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.HasIndex("DivisiId");

                    b.HasIndex("JabatanId");

                    b.ToTable("TblPegawai");

                    b.HasData(
                        new
                        {
                            Id = "PJ24-003",
                            Agama = 0,
                            AppUserId = 2,
                            DivisiId = 1,
                            Email = "megalello99@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 1,
                            JenisKelamin = 1,
                            NIK = "5301086707010008",
                            Nama = "Mega Lita A. Lello, S.Pd",
                            NamaInstagram = "",
                            NoHP = "081237731427",
                            NoRekening = "169601013554503(BRI)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(2001, 7, 27),
                            TanggalMasuk = new DateOnly(2024, 7, 1),
                            TempatLahir = "Noelbaki"
                        },
                        new
                        {
                            Id = "PJ14-004",
                            Agama = 0,
                            AppUserId = 4,
                            DivisiId = 1,
                            Email = "johanis@pandhegajaya.sch.id",
                            GolonganDarah = 0,
                            JabatanId = 2,
                            JenisKelamin = 0,
                            NIK = "5371041807900001",
                            Nama = "Johanis Oenunu, S.Si., M.M",
                            NamaInstagram = "jo_oenunu1807",
                            NoHP = "081353624462",
                            NoRekening = "3140785155 (BCA)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1990, 7, 18),
                            TanggalMasuk = new DateOnly(2014, 7, 1),
                            TempatLahir = "Naikliu"
                        },
                        new
                        {
                            Id = "PJ14-005",
                            Agama = 0,
                            AppUserId = 5,
                            DivisiId = 1,
                            Email = "jeheskia@pandhegajaya.sch.id",
                            GolonganDarah = 0,
                            JabatanId = 3,
                            JenisKelamin = 0,
                            NIK = "5301081205780003",
                            Nama = "Jeheskia Ngadirun, S.Th",
                            NamaInstagram = "",
                            NoHP = "082341108745",
                            NoRekening = "7830-01-008243-53-7 (BRI)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1978, 5, 12),
                            TanggalMasuk = new DateOnly(2014, 7, 1),
                            TempatLahir = "Lampung"
                        },
                        new
                        {
                            Id = "PJ18-012",
                            Agama = 0,
                            DivisiId = 1,
                            Email = "etymissa0703@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 4,
                            JenisKelamin = 1,
                            NIK = "5371044703890005",
                            Nama = "Ety Jelly Missa, S.Pd",
                            NamaInstagram = "etyjelly",
                            NoHP = "085238664779",
                            NoRekening = "2502791721 (BANK NTT)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1989, 3, 7),
                            TanggalMasuk = new DateOnly(2018, 7, 1),
                            TempatLahir = "Kimadale"
                        },
                        new
                        {
                            Id = "PJ18-013",
                            Agama = 0,
                            AppUserId = 6,
                            DivisiId = 1,
                            Email = "umbujonas22@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 5,
                            JenisKelamin = 0,
                            NIK = "5311042206910004",
                            Nama = "Yonas Jangga Ratu, S.Pd., Gr",
                            NamaInstagram = "umbu_joven",
                            NoHP = "082339282852",
                            NoRekening = "783001012234538 (BRI)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1991, 6, 22),
                            TanggalMasuk = new DateOnly(2018, 7, 1),
                            TempatLahir = "Makamenggit"
                        },
                        new
                        {
                            Id = "PJ19-016",
                            Agama = 0,
                            AppUserId = 7,
                            DivisiId = 1,
                            Email = "nerlanemu@pandhegajaya.sch.id",
                            GolonganDarah = 0,
                            JabatanId = 6,
                            JenisKelamin = 1,
                            NIK = "5311046311990001",
                            Nama = "Nerlan Konga Emu, S.Pd",
                            NamaInstagram = "nerlanemu",
                            NoHP = "085338387302",
                            NoRekening = "2176-01-013590-50-0 (BRI)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1999, 11, 19),
                            TanggalMasuk = new DateOnly(2019, 7, 1),
                            TempatLahir = "Barakaraha"
                        },
                        new
                        {
                            Id = "PJ22-024",
                            Agama = 0,
                            AppUserId = 8,
                            DivisiId = 1,
                            Email = "yefrykuafeu@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 8,
                            JenisKelamin = 0,
                            NIK = "5302271707910002",
                            Nama = "Yefry O. M. Kuafeu, S.Pd., M.Sc., Gr",
                            NamaInstagram = "Yefry_kuafeu",
                            NoHP = "081220042511",
                            NoRekening = "0245-01-087347-50-8 (BRI)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1991, 7, 17),
                            TanggalMasuk = new DateOnly(2022, 7, 1),
                            TempatLahir = "Oeleu"
                        },
                        new
                        {
                            Id = "PJ22-026",
                            Agama = 0,
                            DivisiId = 1,
                            Email = "sndymeha55@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 9,
                            JenisKelamin = 1,
                            NIK = "5311034607030002",
                            Nama = "Sindi Pala Meha",
                            NamaInstagram = "sndy_meha",
                            NoHP = "083147694407",
                            NoRekening = "0245-01-087347-50-8 (BRI)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(2003, 7, 6),
                            TanggalMasuk = new DateOnly(2022, 7, 1),
                            TempatLahir = "Lewa"
                        },
                        new
                        {
                            Id = "PJ23-030",
                            Agama = 0,
                            AppUserId = 9,
                            DivisiId = 1,
                            Email = "landoseran99@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 10,
                            JenisKelamin = 0,
                            NIK = "5301081804990001",
                            Nama = "Aprilando Mindeas Dibara Seran, S.Si",
                            NamaInstagram = "landoseran04",
                            NoHP = "082117516199",
                            NoRekening = "783001019682538",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1999, 4, 18),
                            TanggalMasuk = new DateOnly(2023, 7, 1),
                            TempatLahir = "Kupang"
                        },
                        new
                        {
                            Id = "PJ23-031",
                            Agama = 0,
                            AppUserId = 10,
                            DivisiId = 1,
                            Email = "ellapandie@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 11,
                            JenisKelamin = 1,
                            NIK = "5371036009980003",
                            Nama = "Erika Vera Pandie, S.Pd",
                            NamaInstagram = "ellaapandie",
                            NoHP = "081339600327",
                            NoRekening = "348801040709538",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1998, 9, 20),
                            TanggalMasuk = new DateOnly(2023, 7, 1),
                            TempatLahir = "Kupang"
                        },
                        new
                        {
                            Id = "PJ24-002",
                            Agama = 0,
                            AppUserId = 11,
                            DivisiId = 1,
                            Email = "lindajanitaa@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 12,
                            JenisKelamin = 1,
                            NIK = "5314034401010002",
                            Nama = "Linda Janita Thine, S.Pd",
                            NamaInstagram = "lnd8jnt",
                            NoHP = "082132253251",
                            NoRekening = "361801040770534 (BRI)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(2001, 1, 20),
                            TanggalMasuk = new DateOnly(2024, 7, 1),
                            TempatLahir = "Oebelo"
                        },
                        new
                        {
                            Id = "PJ24-004",
                            Agama = 0,
                            AppUserId = 12,
                            DivisiId = 1,
                            Email = "sofiablegur14@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 13,
                            JenisKelamin = 1,
                            NIK = "5305015406990001",
                            Nama = "Sofia Blegur, S.H",
                            NamaInstagram = "sofia_blegur",
                            NoHP = "081239270571",
                            NoRekening = "786201008576539 (BRI)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1999, 6, 14),
                            TanggalMasuk = new DateOnly(2024, 7, 1),
                            TempatLahir = "Lospalos"
                        },
                        new
                        {
                            Id = "PJ24-005",
                            Agama = 1,
                            AppUserId = 13,
                            DivisiId = 1,
                            Email = "putrolas@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 14,
                            JenisKelamin = 0,
                            NIK = "5310130609950001",
                            Nama = "Paulinus Ferino, S.Pd",
                            NamaInstagram = "",
                            NoHP = "082235773372",
                            NoRekening = "467701038760536 (BRI)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1995, 8, 31),
                            TanggalMasuk = new DateOnly(2024, 11, 6),
                            TempatLahir = "Watu Wogel"
                        },
                        new
                        {
                            Id = "PJ17-010",
                            Agama = 0,
                            AppUserId = 14,
                            DivisiId = 2,
                            Email = "tupuyane@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 15,
                            JenisKelamin = 1,
                            NIK = "5371035502890005",
                            Nama = "Paulina Yane Tupu, S.Pd",
                            NamaInstagram = "yane_tupu",
                            NoHP = "087765193550",
                            NoRekening = "3140924066 (BCA)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1989, 2, 15),
                            TanggalMasuk = new DateOnly(2017, 2, 1),
                            TempatLahir = "Waikabubak"
                        },
                        new
                        {
                            Id = "PJ14-003",
                            Agama = 0,
                            AppUserId = 16,
                            DivisiId = 6,
                            Email = "sam.meha@pandhegajaya.sch.id",
                            GolonganDarah = 0,
                            JabatanId = 21,
                            JenisKelamin = 0,
                            NIK = "5371031811860003",
                            Nama = "Samuel Pura Ngunju Meha, S. Pd, M.M",
                            NamaInstagram = "sam_meha",
                            NoHP = "081138226931",
                            NoRekening = "3140737291 (BCA)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(1986, 11, 18),
                            TanggalMasuk = new DateOnly(2014, 1, 1),
                            TempatLahir = "Makamenggit"
                        },
                        new
                        {
                            Id = "PJ19-017",
                            Agama = 0,
                            AppUserId = 17,
                            DivisiId = 1,
                            Email = "yunias@pandhegajaya.sch.id",
                            GolonganDarah = 0,
                            JabatanId = 7,
                            JenisKelamin = 0,
                            NIK = "5301060607000002",
                            Nama = "Yunias Lopes Beka, S.I.Kom",
                            NamaInstagram = "yuniaslopesbeka",
                            NoHP = "081339638529",
                            NoRekening = "4677 0104 6004 534 (BRI)",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(2000, 7, 6),
                            TanggalMasuk = new DateOnly(2019, 7, 1),
                            TempatLahir = "Naibonat"
                        },
                        new
                        {
                            Id = "PJ23-029",
                            Agama = 0,
                            AppUserId = 18,
                            DivisiId = 1,
                            Email = "dussebotahala02@gmail.com",
                            GolonganDarah = 0,
                            JabatanId = 18,
                            JenisKelamin = 1,
                            NIK = "5305014209030001",
                            Nama = "Dusse Elma Botahala",
                            NamaInstagram = "deb.yeol_",
                            NoHP = "081237684620",
                            NoRekening = "350101045896530",
                            StatusPerkawinan = 1,
                            TanggalLahir = new DateOnly(2003, 9, 2),
                            TanggalMasuk = new DateOnly(2023, 7, 1),
                            TempatLahir = "Fanating"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Peminatan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Jenis")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TblPeminatan");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Jenis = 0,
                            Nama = "Umum"
                        },
                        new
                        {
                            Id = 2,
                            Jenis = 1,
                            Nama = "MIPA"
                        },
                        new
                        {
                            Id = 3,
                            Jenis = 1,
                            Nama = "IPS"
                        },
                        new
                        {
                            Id = 4,
                            Jenis = 1,
                            Nama = "Bahasa"
                        },
                        new
                        {
                            Id = 5,
                            Jenis = 1,
                            Nama = "IPA"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pertemuan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("JadwalMengajarId")
                        .HasColumnType("integer");

                    b.Property<string>("Keterangan")
                        .HasColumnType("text");

                    b.Property<int>("Nomor")
                        .HasColumnType("integer");

                    b.Property<int>("StatusPertemuan")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TanggalPelaksanaan")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("JadwalMengajarId");

                    b.ToTable("TblPertemuan");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Raport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnggotaRombelIdRombel")
                        .HasColumnType("integer");

                    b.Property<int>("AnggotaRombelIdSiswa")
                        .HasColumnType("integer");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("JadwalMengajarId")
                        .HasColumnType("integer");

                    b.Property<int>("KategoriNilai")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Predikat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("JadwalMengajarId");

                    b.HasIndex("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel");

                    b.ToTable("TblRaport");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnggotaRombelIdRombel = 2,
                            AnggotaRombelIdSiswa = 2,
                            Deskripsi = "Anlidua Lua Hingmadi, baik dalam sikap berinisiatif berdoa sebelum-sesudah melakukan kegiatan, baik dalam sikap mengikuit jadwal kegiatan sekolah, baik dalam sikap menolong teman sebaya yang membutuhkan, baik dalam sikap disiplin dalam kelas, baik dalam bertanggung jawab menjaga lingkungan sekolah, baik dalam sikap menjaga hubungan dengan orang lain",
                            KategoriNilai = 0,
                            Nama = "Sikap Spiritual",
                            Predikat = "Baik"
                        },
                        new
                        {
                            Id = 2,
                            AnggotaRombelIdRombel = 2,
                            AnggotaRombelIdSiswa = 2,
                            Deskripsi = "Anlidua Lua Hingmadi, baik dalam sikap jujur, baik dalam sikap disiplin, baik dalam sikap tanggungjawab, baik dalam sikap toleransi, baik dalam sikap gotong royong, baik dalam sikap santun, selalu peduli, baik dalam sikap percaya diri, selalu memiliki rasa ingin tahu, baik dalam sikap ramah tamah",
                            KategoriNilai = 0,
                            Nama = "Sikap Sosial",
                            Predikat = "Baik"
                        },
                        new
                        {
                            Id = 3,
                            AnggotaRombelIdRombel = 2,
                            AnggotaRombelIdSiswa = 2,
                            Deskripsi = "Aktif dalam ekstrakulikuler Microsoft Word",
                            KategoriNilai = 3,
                            Nama = "Microsoft Word",
                            Predikat = "Memuaskan"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Rombel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("KelasId")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WaliId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KelasId");

                    b.HasIndex("WaliId");

                    b.ToTable("TblRombel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KelasId = 1,
                            Nama = "A",
                            WaliId = "PJ23-030"
                        },
                        new
                        {
                            Id = 2,
                            KelasId = 2,
                            Nama = "A",
                            WaliId = "PJ17-010"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Siswa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Agama")
                        .HasColumnType("integer");

                    b.Property<int?>("AgamaAyah")
                        .HasColumnType("integer");

                    b.Property<int?>("AgamaIbu")
                        .HasColumnType("integer");

                    b.Property<int?>("AgamaWali")
                        .HasColumnType("integer");

                    b.Property<string>("AktaKelahiran")
                        .HasColumnType("text");

                    b.Property<int?>("AnakKe")
                        .HasColumnType("integer");

                    b.Property<int>("AppUserId")
                        .HasColumnType("integer");

                    b.Property<string>("AsalSekolah")
                        .HasColumnType("text");

                    b.Property<double?>("BeratBadan")
                        .HasColumnType("double precision");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FotoProfil")
                        .HasColumnType("text");

                    b.Property<int?>("GolonganDarah")
                        .HasColumnType("integer");

                    b.Property<string>("Hobi")
                        .HasColumnType("text");

                    b.Property<string>("HubunganDenganWali")
                        .HasColumnType("text");

                    b.Property<string>("IjazahSMP")
                        .HasColumnType("text");

                    b.Property<int>("JenisKelamin")
                        .HasColumnType("integer");

                    b.Property<int>("Jenjang")
                        .HasColumnType("integer");

                    b.Property<int?>("JumlahSaudara")
                        .HasColumnType("integer");

                    b.Property<string>("NIKAyah")
                        .HasColumnType("text");

                    b.Property<string>("NIKIbu")
                        .HasColumnType("text");

                    b.Property<string>("NIKWali")
                        .HasColumnType("text");

                    b.Property<string>("NIS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NISN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaAyah")
                        .HasColumnType("text");

                    b.Property<string>("NamaIbu")
                        .HasColumnType("text");

                    b.Property<string>("NamaWali")
                        .HasColumnType("text");

                    b.Property<string>("NoHP")
                        .HasColumnType("text");

                    b.Property<string>("NoHPAyah")
                        .HasColumnType("text");

                    b.Property<string>("NoHPIbu")
                        .HasColumnType("text");

                    b.Property<string>("NoHPWali")
                        .HasColumnType("text");

                    b.Property<string>("NomorKartuKeluarga")
                        .HasColumnType("text");

                    b.Property<string>("NomorKartuPelajar")
                        .HasColumnType("text");

                    b.Property<string>("PekerjaanAyah")
                        .HasColumnType("text");

                    b.Property<string>("PekerjaanIbu")
                        .HasColumnType("text");

                    b.Property<string>("PekerjaanWali")
                        .HasColumnType("text");

                    b.Property<string>("PendidikanTerakhirAyah")
                        .HasColumnType("text");

                    b.Property<string>("PendidikanTerakhirIbu")
                        .HasColumnType("text");

                    b.Property<string>("PendidikanTerakhirWali")
                        .HasColumnType("text");

                    b.Property<int>("StatusAktif")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusHidupAyah")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusHidupIbu")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusHidupWali")
                        .HasColumnType("integer");

                    b.Property<string>("Suku")
                        .HasColumnType("text");

                    b.Property<DateOnly>("TanggalLahir")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("TanggalLahirAyah")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("TanggalLahirIbu")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("TanggalLahirWali")
                        .HasColumnType("date");

                    b.Property<DateOnly>("TanggalMasuk")
                        .HasColumnType("date");

                    b.Property<string>("TempatLahir")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("TinggiBadan")
                        .HasColumnType("double precision");

                    b.ComplexProperty<Dictionary<string, object>>("AlamatLengkap", "SIAkademik.Domain.ModulSiakad.Entities.Siswa.AlamatLengkap#Alamat", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Jalan")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Kecamatan")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KelurahanDesa")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KodePos")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("KotaKabupaten")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Provinsi")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("RT")
                                .HasColumnType("integer");

                            b1.Property<int>("RW")
                                .HasColumnType("integer");
                        });

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("TblSiswa");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Agama = 0,
                            AppUserId = 15,
                            JenisKelamin = 1,
                            Jenjang = 2,
                            NIS = "192005",
                            NISN = "0047892929",
                            Nama = "Anlidua Lua Hingmadi",
                            StatusAktif = 1,
                            TanggalLahir = new DateOnly(2004, 5, 10),
                            TanggalMasuk = new DateOnly(2019, 8, 1),
                            TempatLahir = "Kalabahi"
                        },
                        new
                        {
                            Id = 3,
                            Agama = 0,
                            AppUserId = 19,
                            JenisKelamin = 1,
                            Jenjang = 0,
                            NIS = "252601",
                            NISN = "252601",
                            Nama = "Ajesta Winarti Banamtuan",
                            StatusAktif = 0,
                            TanggalLahir = new DateOnly(2010, 1, 1),
                            TanggalMasuk = new DateOnly(2025, 8, 1),
                            TempatLahir = "Kupang"
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.TahunAjaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Semester")
                        .HasColumnType("integer");

                    b.Property<int>("Tahun")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("TanggalMulai")
                        .HasColumnType("date");

                    b.Property<DateOnly>("TanggalSelesai")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("TblTahunAjaran");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Semester = 0,
                            Tahun = 2025,
                            TanggalMulai = new DateOnly(2025, 7, 1),
                            TanggalSelesai = new DateOnly(2025, 12, 31)
                        },
                        new
                        {
                            Id = 3,
                            Semester = 0,
                            Tahun = 2021,
                            TanggalMulai = new DateOnly(2021, 8, 1),
                            TanggalSelesai = new DateOnly(2021, 12, 31)
                        });
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Absen", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Pertemuan", "Pertemuan")
                        .WithMany("DaftarAbsen")
                        .HasForeignKey("PertemuanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", "AnggotaRombel")
                        .WithMany("DaftarAbsen")
                        .HasForeignKey("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnggotaRombel");

                    b.Navigation("Pertemuan");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.AbsenKelas", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", "AnggotaRombel")
                        .WithMany("DaftarAbsenKelas")
                        .HasForeignKey("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnggotaRombel");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Rombel", "Rombel")
                        .WithMany("DaftarAnggotaRombel")
                        .HasForeignKey("IdRombel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Siswa", "Siswa")
                        .WithMany("DaftarAnggotaRombel")
                        .HasForeignKey("IdSiswa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rombel");

                    b.Navigation("Siswa");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.HariMengajar", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", "JadwalMengajar")
                        .WithMany("DaftarHariMengajar")
                        .HasForeignKey("JadwalMengajarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.MataPelajaran", "MataPelajaran")
                        .WithMany("DaftarJadwalMengajar")
                        .HasForeignKey("MataPelajaranId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", "Pegawai")
                        .WithMany("DaftarJadwalMengajar")
                        .HasForeignKey("PegawaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Rombel", "Rombel")
                        .WithMany("DaftarJadwalMengajar")
                        .HasForeignKey("RombelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MataPelajaran");

                    b.Navigation("Pegawai");

                    b.Navigation("Rombel");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Kelas", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Peminatan", "Peminatan")
                        .WithMany("DaftarKelas")
                        .HasForeignKey("PeminatanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.TahunAjaran", "TahunAjaran")
                        .WithMany("DaftarKelas")
                        .HasForeignKey("TahunAjaranId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peminatan");

                    b.Navigation("TahunAjaran");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.MataPelajaran", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Peminatan", "Peminatan")
                        .WithMany("DaftarMataPelajaran")
                        .HasForeignKey("PeminatanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peminatan");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Nilai", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", "JadwalMengajar")
                        .WithMany("DaftarNilai")
                        .HasForeignKey("JadwalMengajarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", "AnggotaRombel")
                        .WithMany("DaftarNilai")
                        .HasForeignKey("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnggotaRombel");

                    b.Navigation("JadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", b =>
                {
                    b.HasOne("SIAkademik.Domain.Authentication.AppUser", "Account")
                        .WithOne("Guru")
                        .HasForeignKey("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", "AppUserId");

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Divisi", "Divisi")
                        .WithMany("DaftarPegawai")
                        .HasForeignKey("DivisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Jabatan", "Jabatan")
                        .WithMany("DaftarPegawai")
                        .HasForeignKey("JabatanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Divisi");

                    b.Navigation("Jabatan");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pertemuan", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", "JadwalMengajar")
                        .WithMany("DaftarPertemuan")
                        .HasForeignKey("JadwalMengajarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Raport", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", "JadwalMengajar")
                        .WithMany("DaftarRaport")
                        .HasForeignKey("JadwalMengajarId");

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", "AnggotaRombel")
                        .WithMany("DaftarRaport")
                        .HasForeignKey("AnggotaRombelIdSiswa", "AnggotaRombelIdRombel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnggotaRombel");

                    b.Navigation("JadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Rombel", b =>
                {
                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Kelas", "Kelas")
                        .WithMany("DaftarRombel")
                        .HasForeignKey("KelasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", "Wali")
                        .WithMany("DaftarRombelWali")
                        .HasForeignKey("WaliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kelas");

                    b.Navigation("Wali");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Siswa", b =>
                {
                    b.HasOne("SIAkademik.Domain.Authentication.AppUser", "Account")
                        .WithOne("Siswa")
                        .HasForeignKey("SIAkademik.Domain.ModulSiakad.Entities.Siswa", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SIAkademik.Domain.Authentication.AppUser", b =>
                {
                    b.Navigation("Guru");

                    b.Navigation("Siswa");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.AnggotaRombel", b =>
                {
                    b.Navigation("DaftarAbsen");

                    b.Navigation("DaftarAbsenKelas");

                    b.Navigation("DaftarNilai");

                    b.Navigation("DaftarRaport");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Divisi", b =>
                {
                    b.Navigation("DaftarPegawai");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Jabatan", b =>
                {
                    b.Navigation("DaftarPegawai");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.JadwalMengajar", b =>
                {
                    b.Navigation("DaftarHariMengajar");

                    b.Navigation("DaftarNilai");

                    b.Navigation("DaftarPertemuan");

                    b.Navigation("DaftarRaport");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Kelas", b =>
                {
                    b.Navigation("DaftarRombel");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.MataPelajaran", b =>
                {
                    b.Navigation("DaftarJadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pegawai", b =>
                {
                    b.Navigation("DaftarJadwalMengajar");

                    b.Navigation("DaftarRombelWali");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Peminatan", b =>
                {
                    b.Navigation("DaftarKelas");

                    b.Navigation("DaftarMataPelajaran");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Pertemuan", b =>
                {
                    b.Navigation("DaftarAbsen");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Rombel", b =>
                {
                    b.Navigation("DaftarAnggotaRombel");

                    b.Navigation("DaftarJadwalMengajar");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.Siswa", b =>
                {
                    b.Navigation("DaftarAnggotaRombel");
                });

            modelBuilder.Entity("SIAkademik.Domain.ModulSiakad.Entities.TahunAjaran", b =>
                {
                    b.Navigation("DaftarKelas");
                });
#pragma warning restore 612, 618
        }
    }
}
