@using SIAkademik.Web.Areas.DashboardAdmin.Models.JadwalMengajarModels
@model EditHariVM

<!-- Breadcrumb -->
<div class="row" style="justify-content: center;">
    <div class="col-12 col-md-6 col-lg-6" style="padding: 0;">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Manajemen Akademik</a></li>
                <li class="breadcrumb-item"><a asp-area="@AreaNames.DashboardAdmin" asp-controller="JadwalMengajar" asp-action="Index">Jadwal Mengajar</a></li>
                <li class="breadcrumb-item" aria-current="page">Edit Data Hari</li>
            </ol>
        </nav>
    </div>
</div>

<!-- Isi Konten -->
<div class="section-body">
    <div class="row" style="justify-content: center;">
        <div class="col-12 col-md-6 col-lg-6">
            <div class="card card-warning">
                <div class="card-header" style="padding-top: 20px;">
                    <h4>Edit Data Hari Jadwal Mengajar</h4>
                </div>

                <form asp-action="EditHari" method="post" id="formEditHari">
                    <div class="card-body">
                        <div asp-validation-summary="ModelOnly"></div>

                        <div class="form-group" hidden>
                            <label asp-for="@Model.IdJadwalMengajar"></label>
                            <input asp-for="@Model.IdJadwalMengajar" class="form-control" readonly />
                        </div>

                        <div class="form-group" hidden>
                            <label asp-for="@Model.IdHariMengajar"></label>
                            <input asp-for="@Model.IdHariMengajar" class="form-control" readonly />
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.Hari"></label>
                            <select asp-for="@Model.Hari" class="form-control">
                                <option value="@null">-- Pilih Hari --</option>
                                @foreach (var hari in Enum.GetValues<Hari>())
                                {
                                    <option value="@hari">@hari.Humanize()</option>
                                }
                            </select>
                            <span asp-validation-for="@Model.Hari"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.JamMulai"></label>
                            <input asp-for="@Model.JamMulai" type="time" class="form-control" />
                            <span asp-validation-for="@Model.JamMulai" style="color:red"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.JamAkhir"></label>
                            <input asp-for="@Model.JamAkhir" type="time" class="form-control" />
                            <span asp-validation-for="@Model.JamAkhir" style="color:red"></span>
                        </div>                        
                    </div>
                    <div class="card-footer text-right pt-0">
                        <a href="javascript:void(0)" class="btn btn-danger text-white swal-cancel">Batal</a>
                        <button class="btn btn-primary mr-1" type="submit">Simpan</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        const form = document.getElementById('formEditHari');
        const jamMulaiInput = form.querySelector('[name="JamMulai"]');
        const jamAkhirInput = form.querySelector('[name="JamAkhir"]');
        const spanValidation = form.querySelector('span[data-valmsg-for="JamAkhir"]');
        const simpanBtn = form.querySelector('button[type="submit"]');

        function validateJam() {
            const jamMulai = jamMulaiInput.value;
            const jamAkhir = jamAkhirInput.value;

            // Hapus pesan error lama
            spanValidation.textContent = "";
            jamAkhirInput.classList.remove("is-invalid");

            if (jamMulai && jamAkhir) {
                const mulai = new Date(`1970-01-01T${jamMulai}:00`);
                const akhir = new Date(`1970-01-01T${jamAkhir}:00`);

                if (akhir <= mulai) {
                    spanValidation.textContent = "Jam akhir harus lebih besar dari jam mulai (minimal selisih 1 menit).";
                    // jamAkhirInput.classList.add("is-invalid"); // merah seperti validasi MVC
                    simpanBtn.disabled = true;
                    return false;
                }
            }

            simpanBtn.disabled = false;
            return true;
        }

        // Jalankan validasi setiap kali jam berubah
        jamMulaiInput.addEventListener('change', validateJam);
        jamAkhirInput.addEventListener('change', validateJam);

        // Cegah submit jika tidak valid
        form.addEventListener('submit', function (e) {
            if (!validateJam()) {
                e.preventDefault();
            }
        });
    </script>
}