@using SIAkademik.Web.Areas.DashboardAdmin.Models.TahunAjaranModels

@model EditVM

<!-- Breadcrumb -->
<div class="row" style="justify-content: center;">
    <div class="col-12 col-md-6 col-lg-6" style="padding: 0;">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Manajemen Akademik</a></li>
                <li class="breadcrumb-item"><a asp-area="@AreaNames.DashboardAdmin" asp-controller="TahunAjaran" asp-action="Index">Tahun Ajaran</a></li>
                <li class="breadcrumb-item" aria-current="page">Edit Data</li>
            </ol>
        </nav>
    </div>
</div>

<!-- Isi Konten -->
<div class="section-body">
    <div class="row" style="justify-content: center;">
        <div class="col-12 col-md-6 col-lg-6">
            <div class="card card-warning">
                <div class="card-header" style="padding-top: 20px;">
                    <h4>Edit Data Tahun Ajaran</h4>
                </div>

                <form asp-action="Edit">
                    <div class="card-body">
                        <div asp-validation-summary="ModelOnly" class="form-text text-danger"></div>

                        <div class="form-group" hidden>
                            <label asp-for="@Model.Id"></label>
                            <input asp-for="@Model.Id" type="text" class="form-control" readonly />
                            <span asp-validation-for="@Model.Id"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.Tahun"></label>
                            <input asp-for="@Model.Tahun" type="number" class="form-control" />
                            <span asp-validation-for="@Model.Tahun"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.Semester">Semester</label>
                            <select asp-for="@Model.Semester" class="form-control">
                                @foreach (var semester in Enum.GetValues<Semester>())
                                {
                                    <option value="@semester">@semester.Humanize()</option>
                                }
                            </select>
                            <span asp-validation-for="@Model.Semester"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.TanggalMulai"></label>
                            <input asp-for="@Model.TanggalMulai" type="date" class="form-control"
                                   value="@(Model.TanggalMulai == default(DateOnly)
                               ? DateTime.Now.ToString("yyyy-MM-dd")
                               : Model.TanggalMulai.ToString("yyyy-MM-dd"))" />
                            <span asp-validation-for="@Model.TanggalMulai"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.TanggalSelesai"></label>
                            <input asp-for="@Model.TanggalSelesai" type="date" class="form-control"
                                   value="@(Model.TanggalSelesai == default(DateOnly)
                               ? DateTime.Now.ToString("yyyy-MM-dd")
                               : Model.TanggalSelesai.ToString("yyyy-MM-dd"))" />
                            <span asp-validation-for="@Model.TanggalSelesai"></span>
                        </div>                     
                    </div>

                    <div class="card-footer text-right pt-0">
                        <a href="javascript:void(0)" class="btn btn-danger text-white swal-cancel">Batal</a>
                        <button class="btn btn-primary mr-1" type="submit">Simpan</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@* <form asp-action="Edit" class="container">
    <div asp-validation-summary="ModelOnly"></div>

    <div class="row">
        <label asp-for="@Model.Id"></label>
        <input asp-for="@Model.Id" type="text" readonly />
        <span asp-validation-for="@Model.Id"></span>
    </div>

    <div class="row">
        <label asp-for="@Model.Periode"></label>
        <input asp-for="@Model.Periode" type="text"/>
        <span asp-validation-for="@Model.Periode"></span>
    </div>

    <div class="row">
        <label asp-for="@Model.Semester"></label>
        <select asp-for="@Model.Semester">
            @foreach(var semester in Enum.GetValues<Semester>())
            {
                <option value="@semester">@semester.Humanize()</option>
            }
        </select>
        <span asp-validation-for="@Model.Semester"></span>
    </div>

    <button type="submit">Simpan</button>
</form> *@

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            const $tahun = $('#Tahun');
            const $semester = $('#Semester');
            const $tglMulai = $('#TanggalMulai');
            const $tglSelesai = $('#TanggalSelesai');
            const $btnSimpan = $('button[type="submit"]');

            // Simpan tahun awal (data yang sudah ada)
            const tahunAwal = parseInt($tahun.val()) || 0;

            // Tambahkan elemen pesan error di bawah input (jika belum ada)
            if ($tglMulai.next('.text-danger').length === 0) {
                $tglMulai.after('<span class="text-danger small d-block" id="errorMulai"></span>');
            }
            if ($tglSelesai.next('.text-danger').length === 0) {
                $tglSelesai.after('<span class="text-danger small d-block" id="errorSelesai"></span>');
            }

            function updateTanggal() {
                var tahun = parseInt($tahun.val());
                var semester = $semester.val();

                if (!tahun || !semester) return;

                let startDate, endDate;

                if (semester.toLowerCase() === 'ganjil') {
                    startDate = `${tahun}-07-01`;
                    endDate = `${tahun}-12-31`;
                } else {
                    startDate = `${tahun + 1}-01-01`;
                    endDate = `${tahun + 1}-06-30`;
                }

                // 🔹 Hanya ubah tanggal kalau tahun berubah dari tahunAwal
                // atau tahun sebelumnya kosong
                const tahunSebelumnya = $(this).data('lastValue') || tahunAwal;

                if (tahun !== tahunSebelumnya && tahun !== 0) {
                    $tglMulai.val(startDate);
                    $tglSelesai.val(endDate);
                }

                // Simpan nilai tahun terakhir untuk perbandingan berikutnya
                $(this).data('lastValue', tahun);

                validateTanggal(); // langsung validasi setelah update
            }

            function validateTanggal() {
                var tahun = parseInt($tahun.val());
                var semester = $semester.val();
                var tglMulai = new Date($tglMulai.val());
                var tglSelesai = new Date($tglSelesai.val());

                let minDate, maxDate, errMulai = '', errSelesai = '';

                if (semester.toLowerCase() === 'ganjil') {
                    minDate = new Date(`${tahun}-07-01`);
                    maxDate = new Date(`${tahun}-12-31`);
                } else {
                    minDate = new Date(`${tahun + 1}-01-01`);
                    maxDate = new Date(`${tahun + 1}-06-30`);
                }

                // 🔹 Validasi tanggal mulai
                if (tglMulai < minDate || tglMulai > maxDate) {
                    errMulai = `Tanggal mulai harus antara ${minDate.toLocaleDateString('id-ID')} dan ${maxDate.toLocaleDateString('id-ID')}`;
                }

                // 🔹 Validasi tanggal selesai
                if (tglSelesai < minDate || tglSelesai > maxDate) {
                    errSelesai = `Tanggal selesai harus antara ${minDate.toLocaleDateString('id-ID')} dan ${maxDate.toLocaleDateString('id-ID')}`;
                }

                $('#errorMulai').text(errMulai);
                $('#errorSelesai').text(errSelesai);

                // 🔹 Tahun tidak boleh 0
                if (!tahun || tahun === 0) {
                    $btnSimpan.prop('disabled', true);
                    return;
                }

                // 🔹 Nonaktifkan tombol jika ada error
                if (errMulai || errSelesai) {
                    $btnSimpan.prop('disabled', true);
                } else {
                    $btnSimpan.prop('disabled', false);
                }
            }

            // Event handler
            $tahun.on('change input', updateTanggal);
            $semester.on('change', validateTanggal);
            $tglMulai.on('change', validateTanggal);
            $tglSelesai.on('change', validateTanggal);

            // Jalankan validasi pertama kali
            validateTanggal();
        });
    </script>

}